# Generated by Django 4.2.7 on 2023-12-10 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        ('assistants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('summary', models.TextField()),
                ('data', models.JSONField()),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('summary', models.TextField(blank=True)),
                ('data', models.JSONField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('start', models.DateField(blank=True, default=None, null=True)),
                ('end', models.DateField(blank=True, default=None, null=True)),
                ('state', models.CharField(choices=[('upcomming', 'upcomming'), ('ongoing', 'ongoing'), ('passed', 'passed')], default='upcomming')),
                ('name', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('dependency_goals', models.ManyToManyField(related_name='dependent_goals', through='goals.Dependency', to='goals.goal')),
                ('entities', models.ManyToManyField(related_name='goals', through='goals.Effect', to='goals.entity')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('about', models.TextField(blank=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='assistants.member')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Responsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('summary', models.TextField()),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsibilites', to='goals.goal')),
                ('people', models.ManyToManyField(blank=True, related_name='responsibilities', to='goals.person')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('summary', models.TextField(blank=True, default=None, null=True)),
                ('data', models.JSONField(blank=True, default=None, null=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='goals.goal')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='goals.property')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_seen', models.BooleanField(default=False)),
                ('information', models.TextField()),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='goals.goal')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goals.person')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='goal',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_goals', to='goals.person'),
        ),
        migrations.AddField(
            model_name='goal',
            name='parent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subgoals', to='goals.goal'),
        ),
        migrations.AddField(
            model_name='goal',
            name='properties',
            field=models.ManyToManyField(related_name='goals', through='goals.Record', to='goals.property'),
        ),
        migrations.AddField(
            model_name='entity',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_entities', to='goals.person'),
        ),
        migrations.AddField(
            model_name='entity',
            name='files',
            field=models.ManyToManyField(blank=True, to='files.file'),
        ),
        migrations.AddField(
            model_name='effect',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effects', to='goals.entity'),
        ),
        migrations.AddField(
            model_name='effect',
            name='goal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effects', to='goals.goal'),
        ),
        migrations.AddField(
            model_name='dependency',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='goals.goal'),
        ),
        migrations.AddField(
            model_name='dependency',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='goals.goal'),
        ),
        migrations.CreateModel(
            name='AnalyzerAssistant',
            fields=[
                ('assistant_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assistants.assistant')),
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assistant', to='goals.goal')),
            ],
            options={
                'abstract': False,
            },
            bases=('assistants.assistant',),
            managers=[
                ('objects', utils.models.Manager()),
            ],
        ),
    ]
